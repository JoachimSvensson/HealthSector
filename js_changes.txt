document.addEventListener("DOMContentLoaded", () => {
    const sheetSelector = document.getElementById("sheetSelector");
    const HOTtableDiv = document.getElementById("hot-container");

    function clearDisplay(side) {
        const plotImg = document.getElementById(`plot-${side}`);
        const tableDiv = document.getElementById(`table-container-${side}`);

        plotImg.style.display = "none";
        plotImg.src = "";
        tableDiv.innerHTML = "";
    }

    async function updateTable() {
        const option = { sheet_name: sheetSelector.value };
        const response = await fetch('/api/get_table', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(option)
        });
        const data = await response.json();

        if (data.table) {
            const tableData = data.table.data;
            const tableHeaders = data.table.headers;

            new Handsontable(HOTtableDiv, {
                data: tableData,
                columns: new Array(tableHeaders.length).fill({}),
                colHeaders: tableHeaders,
                rowHeaders: true,
                width: '100%',
                height: 400,
                stretchH: 'all',
                licenseKey: 'non-commercial-and-evaluation',
                contextMenu: true,
                editor: 'text',
                allowInsertRow: true,
            });
        }
    }

    function setupPlotSection(side) {
        const tidsperiode = document.getElementById(`tidsperiode-${side}`);
        const datoerDiv = document.getElementById(`datoer-${side}`);
        const plotBtn = document.getElementById(`plot-btn-${side}`);
        const plotImg = document.getElementById(`plot-${side}`);
        const tableDiv = document.getElementById(`table-container-${side}`);

        tidsperiode.addEventListener("change", () => {
            datoerDiv.style.display = (tidsperiode.value === "custom") ? "block" : "none";
        });

        plotBtn.addEventListener("click", async () => {
            const params = {
                tidsperiode: tidsperiode.value,
                aggregering: document.getElementById(`aggregering-${side}`).value,
                visualiseringskolonne: document.getElementById(`visualiseringskolonne-${side}`).value,
                skift: document.getElementById(`skift-${side}`).value,
                start_dato: document.getElementById(`start-dato-${side}`).value,
                slutt_dato: document.getElementById(`slutt-dato-${side}`).value
            };

            try {
                const response = await fetch('/api/get_plot_data', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(params)
                });
                const data = await response.json();

                clearDisplay(side);

                if (data.plot) {
                    plotImg.src = `data:image/png;base64,${data.plot}`;
                    plotImg.style.display = 'block';
                }

                if (data.table) {
                    tableDiv.innerHTML = data.table;
                }
            } catch (error) {
                console.error(`Feil ved henting av data for ${side}:`, error);
            }
        });
    }

    sheetSelector.addEventListener("change", updateTable);
    setupPlotSection("left");
    setupPlotSection("right");
});
